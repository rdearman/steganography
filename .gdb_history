i r a0 a1 a2 a3 a4 a5 a6 a7 t0 t1 t2 t3 t4
c
r 0xFF
c
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
quit
b main
r 0xFF
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
n
quit
b is_x
r 0x01
s
s
s
s
s
s
s
s
s
s
s
s
i r a0 a1 a2 a3 a4 a5 a6 a7 t0 t1 t2 t3 t4
s
s
i r a0 a1 a2 a3 a4 a5 a6 a7 t0 t1 t2 t3 t4
s
s
s
s
i r a0 a1 a2 a3 a4 a5 a6 a7 t0 t1 t2 t3 t4
s
i r a0 a1 a2 a3 a4 a5 a6 a7 t0 t1 t2 t3 t4
x/s $a5
s
s
s
s
s
s
s
i r a0 a1 a2 a3 a4 a5 a6 a7 t0 t1 t2 t3 t4
s
s
s
i r a0 a1 a2 a3 a4 a5 a6 a7 t0 t1 t2 t3 t4
s
s
s
s
i r a0 a1 a2 a3 a4 a5 a6 a7 t0 t1 t2 t3 t4
quit
b update_result 
r 0x01
i r a0 a1 a2 a3 a4 a5 a6 a7 t0 t1 t2 t3 t4
s
s
s
s
i r a0 a1 a2 a3 a4 a5 a6 a7 t0 t1 t2 t3 t4
s
s
s
s
s
s
s
s
s
i r a0 a1 a2 a3 a4 a5 a6 a7 t0 t1 t2 t3 t4
s
x/s $a5
s
s
i r a0 a1 a2 a3 a4 a5 a6 a7 t0 t1 t2 t3 t4
l
quit
?
help
set args add fred.txt john.bomb
r
s
bt
set args add fred.txt john.bomb
break parse_cmdline
r
s
s
s
bt
set args add fred.txt john.bomb
b main
r
(gdb) info registers a0 a1
(gdb) x/4gx $a1

info registers
(gdb) x/s *(char**)$a1
(gdb) x/s *(char**)$a1+8
(gdb) x/s *(char**)$a1+16

quit
set args add fred.txt john.bomb
r
bt
list
 info proc mappings
disas main
break 0x10714
quit
set args add fred.txt john.bomb
r
b parse_cmdline
r
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
q
set args add fred jim
r
b parse_cmdline
r
display/i $pc
si
x/s $t1
break parse_cmdline
run add fred jim
(gdb) info reg a0 a1
info reg a0 a1
info reg a0 a1
set $argv = (char**)$a1
 x/4gx $argv
 x/s $argv[0]
 x/s $argv[1]
 x/s $argv[2]
 x/s $argv[3]
si
si
si
si
si
si
si
si
si
 x/s $t1
break parse_cmdline
run add fred jim

# At entry, check argc/argv
info registers a0 a1

# Treat a1 as char** and dump argv
set $argv = (char**)$a1
x/4gx $argv
x/s $argv[0]
x/s $argv[1]
x/s $argv[2]
x/s $argv[3]

# Step to load argv[1] into t1
si
si
si
x/s $t1

run add fred jim

info registers a0 a1


set $argv = (char**)$a1
x/4gx $argv
x/s $argv[0]
x/s $argv[1]
x/s $argv[2]
x/s $argv[3]


si
si
si
x/s $t1
info registers a0 a1


set $argv = (char**)$a1
x/4gx $argv
x/s $argv[0]
x/s $argv[1]
x/s $argv[2]
x/s $argv[3]


si
si
si
x/s $t1
quit
set args add test/test.bmp test/hello
b insert_module 
r
l
s
quit
b main
r
i r
q
